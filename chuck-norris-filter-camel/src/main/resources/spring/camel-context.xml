<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:cxf="http://camel.apache.org/schema/cxf" xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd
       ">
    <camelContext id="chuck-norris-filter-camel" xmlns="http://camel.apache.org/schema/spring">
        <rest path="/restsvc">
            <get uri="/ping">
                <route>
                    <to uri="sql:select * from movie ?outputType=SelectList" />
                </route>
            </get>
            <get uri="/test">
                <route>
                    <setBody>
                        <constant>
                            {"schema":{"type":"struct","fields":[{"type":"struct","fields":[{"type":"int64","optional":false,"field":"id"},{"type":"int32","optional":true,"field":"rental_duration"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"start_date"},{"type":"int64","optional":true,"field":"customer_id"},{"type":"int64","optional":true,"field":"movie_id"}],"optional":true,"name":"dbserver1.inventory.rental.Value","field":"before"},{"type":"struct","fields":[{"type":"int64","optional":false,"field":"id"},{"type":"int32","optional":true,"field":"rental_duration"},{"type":"int64","optional":true,"name":"io.debezium.time.Timestamp","version":1,"field":"start_date"},{"type":"int64","optional":true,"field":"customer_id"},{"type":"int64","optional":true,"field":"movie_id"}],"optional":true,"name":"dbserver1.inventory.rental.Value","field":"after"},{"type":"struct","fields":[{"type":"string","optional":true,"field":"version"},{"type":"string","optional":true,"field":"connector"},{"type":"string","optional":false,"field":"name"},{"type":"int64","optional":false,"field":"server_id"},{"type":"int64","optional":false,"field":"ts_sec"},{"type":"string","optional":true,"field":"gtid"},{"type":"string","optional":false,"field":"file"},{"type":"int64","optional":false,"field":"pos"},{"type":"int32","optional":false,"field":"row"},{"type":"boolean","optional":true,"default":false,"field":"snapshot"},{"type":"int64","optional":true,"field":"thread"},{"type":"string","optional":true,"field":"db"},{"type":"string","optional":true,"field":"table"},{"type":"string","optional":true,"field":"query"}],"optional":false,"name":"io.debezium.connector.mysql.Source","field":"source"},{"type":"string","optional":false,"field":"op"},{"type":"int64","optional":true,"field":"ts_ms"}],"optional":false,"name":"dbserver1.inventory.rental.Envelope"},"payload":{"before":null,"after":{"id":2,"rental_duration":7,"start_date":1558085647000,"customer_id":2,"movie_id":9},"source":{"version":"0.9.5.Final","connector":"mysql","name":"dbserver1","server_id":0,"ts_sec":0,"gtid":null,"file":"mysql-bin.000003","pos":7943,"row":0,"snapshot":true,"thread":null,"db":"inventory","table":"rental","query":null},"op":"c","ts_ms":1558097283698}}
                        </constant>
                    </setBody>
                    <inOnly uri="{{kafka.endpoint.standard}}" />
                </route>
            </get>
        </rest>
        <route id="http-receiver">
            <from id="http-receiver-starter" uri="servlet://ping" />
            <setHeader headerName="Content-Type">
                <constant>application/json</constant>
            </setHeader>
            <setBody>
                <constant>{"msg" : "HELLO"}</constant>
            </setBody>
        </route>
        <route>
            <from uri="{{kafka.endpoint.standard}}" />
            <unmarshal>
                <json library="Jackson" />
            </unmarshal>
            <setBody>
                <jsonpath>
                    $.payload.after
                </jsonpath>
            </setBody>
            <log message="${body.class}" />
            <to uri="sql:select * from movie where id=:#${body[movie_id]}?outputHeader=movie&amp;outputType=SelectOne" />
            <to uri="language:simple:${body.put('movie',${header.movie})}?transform=false" />
            <to uri="sql:select * from customer where id=:#${body[customer_id]}?outputHeader=customer&amp;outputType=SelectOne" />
            <to uri="language:simple:${body.put('customer',${header.customer})}?transform=false" />
            <choice>
                <when>
                    <simple>${header.movie[main_actor]} == 'Chuck Norris'</simple>
                    <marshal>
                        <json library="Jackson" prettyPrint="true" />
                    </marshal>
                    <log message="${body}" />
                    <to uri="{{kafka.endpoint.outstandard}}" />
                </when>
                <otherwise>
                    <log message="Not a Chuck Norris Movie... boooring!"></log>
                </otherwise>
            </choice>
        </route>
    </camelContext>
</beans>